{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\flicker-trinket\\\\src\\\\components\\\\AddCart.js\",\n    _s = $RefreshSig$();\n\n// const Task = ({ Item}) => {\n//   return (\n//     <div   >\n//       <h3>\n//         {Item.text}\n//       </h3>\n//       <p>{task.day}</p>\n//     </div>\n//   );\n// };\n// export default Task;\n// import React from \"react\";\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\n// import Card from \"@material-ui/core/Card\";\n// import CardContent from \"@material-ui/core/CardContent\";\n// import CardMedia from \"@material-ui/core/CardMedia\";\n// import Typography from \"@material-ui/core/Typography\";\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: \"flex\",\n//   },\n//   details: {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//   },\n//   content: {\n//     flex: \"1 0 auto\",\n//   },\n//   cover: {\n//     width: '20vw',\n//     height:'25vh',\n//     aspectRatio: 135 / 76,\n//   },\n// }));\n// export default function MediaControlCard({Item}) {\n//   const classes = useStyles();\n//   const theme = useTheme();\n//   return (\n//     <Card className={classes.root}>\n//         <CardMedia\n//         className={classes.cover}\n//         image={Item.img}\n//         title=\"Live from space album cover\"\n//       />\n//       <div className={classes.details}>\n//         <CardContent className={classes.content}>\n//           <Typography component=\"h5\" variant=\"h5\">\n//             {Item.title}\n//           </Typography>\n//           <Typography variant=\"subtitle1\" color=\"textSecondary\">\n//             {Item.description}\n//           </Typography>\n//         </CardContent>\n//       </div>\n//     </Card>\n//   );\n// }\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TAX_RATE = 0.07;\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nfunction priceRow(qty, unit) {\n  return qty * unit;\n} // function createRow(desc, qty, unit) {\n//   const price = priceRow(qty, unit);\n//   return { desc, qty, unit, price };\n// }\n\n\nfunction subtotal(items) {\n  return items.map(({\n    price\n  }) => price).reduce((sum, i) => sum + i, 0);\n} // const rows = [\n//   createRow('Paperclips (Box)', 100, 1.15),\n//   createRow('Paper (Case)', 10, 45.99),\n//   createRow('Waste Basket', 2, 17.99),\n// ];\n\n\nconst invoiceSubtotal = subtotal(rows);\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\nexport default function SpanningTable() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"spanning table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: [/*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            colSpan: 3,\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Desc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Qty.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Sum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [Items.map(Item => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: [Item.img, Item.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: Item.qty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: Items.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: ccyFormat(Items.price)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, Item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            rowSpan: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 2,\n            children: \"Subtotal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: ccyFormat(invoiceSubtotal)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Tax\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: `${(TAX_RATE * 100).toFixed(0)} %`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: ccyFormat(invoiceTaxes)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 2,\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: ccyFormat(invoiceTotal)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SpanningTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SpanningTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpanningTable\");","map":{"version":3,"sources":["E:/React/flicker-trinket/src/components/AddCart.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TAX_RATE","useStyles","table","minWidth","ccyFormat","num","toFixed","priceRow","qty","unit","subtotal","items","map","price","reduce","sum","i","invoiceSubtotal","rows","invoiceTaxes","invoiceTotal","SpanningTable","classes","Items","Item","img","title","id"],"mappings":"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","sourcesContent":["// const Task = ({ Item}) => {\r\n//   return (\r\n//     <div   >\r\n//       <h3>\r\n//         {Item.text}\r\n\r\n//       </h3>\r\n//       <p>{task.day}</p>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Task;\r\n\r\n// import React from \"react\";\r\n// import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n// import Card from \"@material-ui/core/Card\";\r\n// import CardContent from \"@material-ui/core/CardContent\";\r\n// import CardMedia from \"@material-ui/core/CardMedia\";\r\n// import Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     display: \"flex\",\r\n//   },\r\n//   details: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\",\r\n//   },\r\n//   content: {\r\n//     flex: \"1 0 auto\",\r\n//   },\r\n//   cover: {\r\n//     width: '20vw',\r\n//     height:'25vh',\r\n//     aspectRatio: 135 / 76,\r\n//   },\r\n  \r\n// }));\r\n\r\n// export default function MediaControlCard({Item}) {\r\n//   const classes = useStyles();\r\n//   const theme = useTheme();\r\n\r\n//   return (\r\n//     <Card className={classes.root}>\r\n//         <CardMedia\r\n//         className={classes.cover}\r\n//         image={Item.img}\r\n//         title=\"Live from space album cover\"\r\n//       />\r\n//       <div className={classes.details}>\r\n//         <CardContent className={classes.content}>\r\n           \r\n//           <Typography component=\"h5\" variant=\"h5\">\r\n//             {Item.title}\r\n//           </Typography>\r\n//           <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n//             {Item.description}\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </div>\r\n      \r\n//     </Card>\r\n//   );\r\n// }\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst TAX_RATE = 0.07;\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction ccyFormat(num) {\r\n  return `${num.toFixed(2)}`;\r\n}\r\n\r\nfunction priceRow(qty, unit) {\r\n  return qty * unit;\r\n}\r\n\r\n// function createRow(desc, qty, unit) {\r\n//   const price = priceRow(qty, unit);\r\n//   return { desc, qty, unit, price };\r\n// }\r\n\r\nfunction subtotal(items) {\r\n  return items.map(({ price }) => price).reduce((sum, i) => sum + i, 0);\r\n}\r\n\r\n// const rows = [\r\n//   createRow('Paperclips (Box)', 100, 1.15),\r\n//   createRow('Paper (Case)', 10, 45.99),\r\n//   createRow('Waste Basket', 2, 17.99),\r\n// ];\r\n\r\nconst invoiceSubtotal = subtotal(rows);\r\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n\r\nexport default function SpanningTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"spanning table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={3}>\r\n              Details\r\n            </TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Desc</TableCell>\r\n            <TableCell align=\"right\">Qty.</TableCell>\r\n            <TableCell align=\"right\">Unit</TableCell>\r\n            <TableCell align=\"right\">Sum</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Items.map((Item) => (\r\n            <TableRow key={Item.id}>\r\n              <TableCell>{Item.img}{Item.title}</TableCell>\r\n              <TableCell align=\"right\">{Item.qty}</TableCell>\r\n              <TableCell align=\"right\">{Items.unit}</TableCell>\r\n              <TableCell align=\"right\">{ccyFormat(Items.price)}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell rowSpan={3} />\r\n            <TableCell colSpan={2}>Subtotal</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Tax</TableCell>\r\n            <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell colSpan={2}>Total</TableCell>\r\n            <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}