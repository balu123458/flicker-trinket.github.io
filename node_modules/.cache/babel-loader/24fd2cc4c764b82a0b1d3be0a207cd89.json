{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\flicker-trinket\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from '@material-ui/core/Paper';\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport image5 from \"../Assets/image5.png\";\nimport image1 from \"../Assets/image1.png\";\nimport image2 from \"../Assets/image2.png\";\nimport image3 from \"../Assets/image3.png\";\nimport image4 from \"../Assets/image4.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: 'theme.palette.background.paper',\n    paddingTop: '12vh'\n  },\n  gridList: {\n    width: '90%',\n    height: '90%'\n  },\n  img: {\n    width: '500px'\n  }\n})); // The example data is structured as follows:\n\nconst tileData = [{\n  img: image5,\n  title: \"Image\",\n  author: \"author\",\n  cols: 1,\n  rows: 4\n}, {\n  img: image1,\n  title: \"Image\",\n  author: \"author\",\n  rows: '6'\n}, {\n  img: image2,\n  title: \"Image\",\n  author: \"author\",\n  cols: 2\n}, {\n  img: image3,\n  title: \"Image\",\n  author: \"author\",\n  cols: 2\n}, {\n  img: image4,\n  title: \"Image\",\n  author: \"author\",\n  width: '100%'\n}];\n\nconst Home = () => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      cellHeight: 120,\n      className: classes.gridList,\n      cols: 2,\n      children: tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        cols: tile.cols || 1,\n        rows: tile.rows,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: tile.img,\n            alt: tile.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 12\n        }, this)\n      }, tile.img, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/React/flicker-trinket/src/components/Home.js"],"names":["React","makeStyles","Paper","GridList","GridListTile","image5","image1","image2","image3","image4","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","paddingTop","gridList","width","height","img","tileData","title","author","cols","rows","Home","classes","map","tile"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport image5 from \"../Assets/image5.png\";\r\nimport image1 from \"../Assets/image1.png\";\r\nimport image2 from \"../Assets/image2.png\";\r\nimport image3 from \"../Assets/image3.png\";\r\nimport image4 from \"../Assets/image4.png\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: 'theme.palette.background.paper',\r\n    paddingTop:'12vh'\r\n  },\r\n  gridList: {\r\n    width: '90%',\r\n    height: '90%',\r\n  },\r\n  img:{\r\n    width:'500px'\r\n  }\r\n}));\r\n\r\n// The example data is structured as follows:\r\n\r\n\r\n\r\nconst tileData = [\r\n  {\r\n    img: image5,\r\n    title: \"Image\",\r\n    author: \"author\",\r\n   \r\n    cols:1,\r\n    rows:4\r\n    \r\n  },\r\n  {\r\n    img: image1,\r\n    title: \"Image\",\r\n    author: \"author\",\r\n  \r\n    rows:'6',\r\n    \r\n  },\r\n  {\r\n    img: image2,\r\n    title: \"Image\",\r\n    author: \"author\",\r\n   \r\n    cols:2,\r\n    \r\n\r\n  },\r\n  {\r\n    img: image3,\r\n    title: \"Image\",\r\n    author: \"author\",\r\n  \r\n    cols:2,\r\n    \r\n  },\r\n  {\r\n    img: image4,\r\n    title: \"Image\",\r\n    author: \"author\",\r\n    width:'100%',\r\n    \r\n  },\r\n];\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={120} className={classes.gridList} cols={2} >\r\n        {tileData.map((tile) => (\r\n          <GridListTile key={tile.img} cols={tile.cols || 1} rows={tile.rows}>\r\n           <Paper> <img  src={tile.img} alt={tile.title} /></Paper>\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}