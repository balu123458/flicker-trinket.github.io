{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\flicker-trinket\\\\src\\\\components\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Drawer from \"./Draw\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  Bgcolor: {\n    backgroundColor: \"palevioletred\"\n  }\n});\n\nconst Navbar = () => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      className: classes.Bgcolor,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Flicker Trinket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          className: classes.drawer,\n          variant: \"persistent\",\n          anchor: \"left\",\n          open: open,\n          classes: {\n            paper: classes.drawerPaper\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.drawerHeader,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleDrawerClose,\n              children: theme.direction === \"ltr\" ? /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: [\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 42\n                }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)]\n            }, text, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: [\"All mail\", \"Trash\", \"Spam\"].map((text, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: index % 2 === 0 ? /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 40\n                }, this) : /*#__PURE__*/_jsxDEV(MailIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, text, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["E:/React/flicker-trinket/src/components/Navbar.js"],"names":["AppBar","Toolbar","MenuIcon","IconButton","makeStyles","Drawer","useStyles","Bgcolor","backgroundColor","Navbar","classes","drawer","open","paper","drawerPaper","drawerHeader","handleDrawerClose","theme","direction","map","text","index"],"mappings":"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","sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Drawer from \"./Draw\";\r\n\r\nconst useStyles = makeStyles({\r\n  Bgcolor: {\r\n    backgroundColor: \"palevioletred\",\r\n  },\r\n});\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <AppBar className={classes.Bgcolor}>\r\n        <Toolbar>\r\n          <IconButton>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <h1>Flicker Trinket</h1>\r\n          <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n          >\r\n            <div className={classes.drawerHeader}>\r\n              <IconButton onClick={handleDrawerClose}>\r\n                {theme.direction === \"ltr\" ? (\r\n                  <ChevronLeftIcon />\r\n                ) : (\r\n                  <ChevronRightIcon />\r\n                )}\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n              {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map(\r\n                (text, index) => (\r\n                  <ListItem button key={text}>\r\n                    <ListItemIcon>\r\n                      {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={text} />\r\n                  </ListItem>\r\n                )\r\n              )}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n                <ListItem button key={text}>\r\n                  <ListItemIcon>\r\n                    {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={text} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Drawer>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}